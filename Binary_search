Binary Search

To perform binary search the array should be sorted.
In binary search which check the middle element whether it is equal to search element or not ,

middle_index = (upper_index+lower_index)/2;
if(search_element == arr[middle_index])

if not
Then we check whether search element is greater tham arr[m] element or smaller than arr[m] element.

esle if(search_element > arr[m])
then lower_index = m+1;

else if(search_element < arr[m])
then upper_index = m-1;

We run the loop till lower_index <= upper_index

************************************************************************************************************************************
code without recurssion
************************************************************************************************************************************
#include<stdio.h>

int binary_search(int *arr,int n,int search)
{
      int i,count=0,m;
      int l,u;
      l = 0;
      u = n-1;
	while(l<=u)
	{
		m = (l+u)/2;
		count++;
		if(search == arr[m])
		{
			printf("found at position %d\n",m+1);
			return count;
		}
		
		
		else if(search > arr[m])
		l = m+1;
		
		else if(search < arr[m])
		u = m-1;
	}

	printf("Element not found\n");
	return count;
	
}

int main()
{
	int i,n;
	int count;
	
	printf("Enter size of array\n");
	scanf("%d",&n);
	int search;
	
	int arr[n];
	for(i=0;i<n;i++)
	scanf("%d",arr+i);
	
	printf("Entered Array is\n");
	for(i=0;i<n;i++)
	printf("%d ",arr[i]);
	printf("\n");
    
    printf("Enter element to search\n");
    scanf("%d",&search);
    
	count = binary_search(arr,n,search);
	
	printf("Number of loops ran: %d\n",count);
	}
 ************************************************************************************************************************************
 Binary Search with Recurssion
 ************************************************************************************************************************************
 #include<stdio.h>

int binary_search(int *arr,int l,int u,int search)
{
      int m;
     
	if(l<=u)
	{
		m = (l+u)/2;
		if(search == arr[m])
		{
			printf("found at position %d\n",m+1);
			return 1;
		}
		
		
		else if(search > arr[m])
		return binary_search(arr,m+1,u,search);
		
		else if(search < arr[m])
		return binary_search(arr,l,m-1,search);
	}

	printf("Element not found\n");
	return count;
	
}

int main()
{
	int i,n;
	int count;
	
	printf("Enter size of array\n");
	scanf("%d",&n);
	int search;
	
	int arr[n];
	for(i=0;i<n;i++)
	scanf("%d",arr+i);
	
	printf("Entered Array is\n");
	for(i=0;i<n;i++)
	printf("%d ",arr[i]);
	printf("\n");
    
    printf("Enter element to search\n");
    scanf("%d",&search);
    
	binary_search(arr,0,n-1,search);
	
	printf("Number of loops ran: %d\n",count);
	

}
*************************************************************************************************************************************
